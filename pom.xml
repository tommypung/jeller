<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<groupId>org.svearike</groupId>
	<artifactId>jeller</artifactId>
	<packaging>jar</packaging>
	<version>1.1</version>

	<name>jeller</name>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.21</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.shredzone.acme4j/acme4j-client -->
		<dependency>
			<groupId>org.shredzone.acme4j</groupId>
			<artifactId>acme4j-client</artifactId>
			<version>0.8</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.shredzone.acme4j/acme4j-utils -->
		<dependency>
			<groupId>org.shredzone.acme4j</groupId>
			<artifactId>acme4j-utils</artifactId>
			<version>0.8</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.0</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20140107</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc -->
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.15.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.kohlschutter.junixsocket/junixsocket-common -->
		<dependency>
			<groupId>com.kohlschutter.junixsocket</groupId>
			<artifactId>junixsocket-common</artifactId>
			<version>2.0.5-SNAPSHOT</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.kohlschutter.junixsocket/junixsocket-native-common -->
		<dependency>
			<groupId>com.kohlschutter.junixsocket</groupId>
			<artifactId>junixsocket-native-common</artifactId>
			<version>2.0.5-SNAPSHOT</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>8.2.0.v20160908</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-servlet -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>8.2.0.v20160908</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.3</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>

		<resources>
			<resource>
				<directory>src/main/webapp</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<targetPath>webapp</targetPath>
			</resource>
			<resource>
				<directory>src/main/js</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<targetPath>webapp/js</targetPath>
			</resource>
			<resource>
				<directory>src/main/sql</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<targetPath>sql</targetPath>
			</resource>
		</resources>

		<testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/main/queries</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.14</version>
				<configuration>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<version>2.5.1</version>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>org.svearike.jeller.Main</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.svearike</groupId>
				<artifactId>maven-serviceworker-generator</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<goals>
							<goal>generate-service-worker</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>